openapi: 3.0.1
info:
  title: OpenAPIGateway
  description: ''
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: rostislav.pridal@jamf.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
servers:
  - url: /v1
paths:
  '/v1/login':
    post:
      tags:
        - Login
      description: Endpoint for generating expiring JWT token. Token can be used for requests against Wandera API
      operationId: login
      parameters:
        - name: authorization
          description: Basic auth header containing base64 hash of clientId and clientSecret. Hash is calculated from string pair "clientId:clientSecret"
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A response containing expiring JWT token that can be used for requests against Wandera API
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/LoginRes'
        '403':
          description: Access denied - can be due to wrong combination  of clientId and clientSecret, request path, method
        '429':
          description: A response indicates the client has sent too many requests within given time period
          headers:
            X-Rate-Limit-Retry-After-Milliseconds:
              description: The time (in ms) after which client should retry his request against Wandera API once it hits rate limit restriction
              schema:
                type: string
  '/v1/customer/{externalId}':
    get:
      tags:
        - Customer
      description: This endpoint serves for translations of Jamf external Id to Wandera Id.
      summary: Get customer Wandera Id by given Jamf external tenant Id
      operationId: getCustomerByExternalCustomerId
      parameters:
        - name: externalId
          description: Jamf tenant Id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns document of Wandera customer Id{id} and Jamf tenant Id{externalId}. 
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerRes'
        '404':
          description: No Wandera customer Id found for given external tenant Id 
  '/v1/enrollment/activation-profiles':
    get:
      tags:
        - Enrollment
      description: This endpoint returns a list of activation profiles for given Wandera customer Id. Will be used mainly to get the activation profile code used by GET /v1/enrollment/configuration-profiles/{code} endpoint.
      summary: Get all activation profiles for given customer Id
      operationId: getActivationProfilesUsingGET
      parameters:
        - name: customerId
          in: query
          description: Wandera customer Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Return list of activation profiles for given Wandera customer Id
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/ActivationProfiles'
        '404':
          description: Customer Id doesn't exist
  '/v1/enrollment/configuration-profiles':
    get:
      tags:
        - Enrollment
      description: This endpoint returns configuration profile by activation profile code. Configuration profiles will be imported to UEM on the Jamf side.
      summary: Get configuration profile for given activation profile code.
      operationId: generateUsingGET_1
      parameters:
        - name: code
          in: query
          description: Activation profile code
          required: true
          schema:
            type: string
        - name: customerId
          in: query
          description: Wandera customer Id
          required: true
          schema:
            type: string
        - name: supervised
          in: query
          description: Specifies if configuration profile is generated for supervised device
          required: true
          schema:
            type: boolean
        - name: uem
          in: query
          description: Specifies target UEM. For Jamf School it is JAMF_SCHOOL
          required: true
          schema:
            type: string
            enum:
            - JAMF_SCHOOL
      responses:
        '200':
          description: XML representation of configuration profiles. The format is UEM specific and it doesn't have to be valid
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: Activation profile doesn't exist for given code and customer Id
  '/v1/enrollment/devices':
    get:
      tags:
        - Enrollment
      description: This endpoint returns a list of Wandera devices for given customer Id.
      summary: Get a list of devices for given customer Id
      parameters:
        - name: customerId
          in: query
          description: Wandera customer Id
          required: true
          example: 4fefddae-90a2-41ac-922f-75c3167668ed
          schema:
            type: string
      responses:
        '200':
          description: List of details for devices enrolled to Wandera. For Jamf Shool,  device is enrolled once we see its trafic on DNS. 
          content:
            text/json:
             schema:
              $ref: '#/components/schemas/Devices'
components:
  schemas:
    LoginRes:
      type: object
      properties:
        token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
    CustomerRes:
      type: object
      properties:
        id:
          type: string
          example: 4fefddae-90a2-41ac-922f-75c3167668ed
        externalId:
          type: string
          example: f09ed809-9c53-425d-8ec9-93ea6fb49b3a
    DeviceRes:
      type: object
      properties:
        id:
          type: string
          example: a71f32aa-4583-41cc-80b7-0bbe8b66f9fd
        externalId:
          type: string
          example: b29997aa-dfb4-4ccd-9cff-c2af25f4e301
        createdAt:
          type: string
    Devices:
      type: object
      properties:
        activeDeviceCount:
          type: integer
          format: int64
        devices:
          type: array
          items:
            $ref: '#/components/schemas/DeviceRes'  
    ActivationProfiles:
      title: ActivationProfiles
      type: object
      properties:
        profiles:
          type: array
          items:
            $ref: '#/components/schemas/ActivationProfileRes'
        lastEnrollment:
          type: string
    ActivationProfileRes:
      title: ActivationProfileRes
      type: object
      properties:
        name:
          type: string
        code:
          type: string
        url:
          type: string
        state:
          type: string
        activeDeviceCount:
          type: integer
          format: int64
  links: {}
  callbacks: {}
security: []